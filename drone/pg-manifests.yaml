
---
# Source: postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: quaffing-ladybird-drone-postgresql
  labels:
    app: quaffing-ladybird-drone-postgresql
    chart: "postgresql-0.7.1"
    release: "quaffing-ladybird-drone"
    heritage: "Tiller"
type: Opaque
data:

  postgres-password: REDACTED
    invalid: yaml forcing you to set a password, please dont commit

---
# Source: postgresql/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: quaffing-ladybird-drone-postgresql
  labels:
    app: quaffing-ladybird-drone-postgresql
    chart: "postgresql-0.7.1"
    release: "quaffing-ladybird-drone"
    heritage: "Tiller"
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: quaffing-ladybird-drone-postgresql
  labels:
    app: quaffing-ladybird-drone-postgresql
    chart: "postgresql-0.7.1"
    release: "quaffing-ladybird-drone"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: quaffing-ladybird-drone-postgresql
---
# Source: postgresql/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: quaffing-ladybird-drone-postgresql
  labels:
    app: quaffing-ladybird-drone-postgresql
    chart: "postgresql-0.7.1"
    release: "quaffing-ladybird-drone"
    heritage: "Tiller"
spec:
  template:
    metadata:
      labels:
        app: quaffing-ladybird-drone-postgresql
    spec:
      containers:
      - name: quaffing-ladybird-drone-postgresql
        image: "postgres:9.6.2"
        imagePullPolicy: ""
        env:
        - name: POSTGRES_USER
          value: "drone"
          # Required for pg_isready in the health probes.
        - name: PGUSER
          value: "drone"
        - name: POSTGRES_DB
          value: "drone"
        - name: POSTGRES_INITDB_ARGS
          value: ""
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: quaffing-ladybird-drone-postgresql
              key: postgres-password
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 256Mi

        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data/pgdata
          subPath: postgresql-db
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: quaffing-ladybird-drone-postgresql
